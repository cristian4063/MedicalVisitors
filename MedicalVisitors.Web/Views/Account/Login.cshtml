@*@using Abp.Web.Mvc.Extensions
@using Microsoft.Owin.Security
@model MedicalVisitors.Web.Models.Account.LoginFormViewModel
@section Styles
{
    @Html.IncludeStyle("~/Views/Account/Login.css")
}
@section Scripts
{
    @Html.IncludeScript("~/Views/Account/Login.js")
}
<div class="container">
    <div id="LoginArea" class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                <form id="LoginForm" class="form-horizontal" action="@(Url.Action("Login", "Account"))?returnUrl=@(Model.ReturnUrl)" method="POST">
                    <fieldset>
                        <legend>@L("LogIn")</legend>

                        @if (Model.IsMultiTenancyEnabled)
                        {
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <input type="text" class="form-control" id="TenancyName" placeholder="@L("TenancyName")" required maxlength="@MedicalVisitors.MultiTenancy.Tenant.MaxTenancyNameLength">
                                    <span class="text-muted">@L("CanBeEmptyToLoginAsHost")</span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <input type="hidden" id="TenancyName" value="">
                        }

                        <div class="form-group">
                            <div class="col-lg-12">
                                <input type="text" class="form-control" id="EmailAddressInput" placeholder="@L("UserNameOrEmail")" required maxlength="@MedicalVisitors.Users.User.MaxEmailAddressLength">
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-lg-12">
                                <input type="password" class="form-control" id="PasswordInput" placeholder="@L("Password")" required maxlength="@MedicalVisitors.Users.User.MaxPlainPasswordLength">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" id="RememberMeInput">
                                        <span class="ripple"></span>
                                        <span class="check"></span> @L("RememberMe")
                                    </label>
                                </div>
                            </div>
                        </div>

                        <input id="ReturnUrlHash" type="hidden" name="returnUrlHash" />

                        <div class="form-group">
                            <div class="col-lg-12">
                                <button id="LoginButton" type="submit" class="btn btn-primary"><i class="fa fa-sign-in"></i> @L("LogIn")</button>
                                <a class="btn btn-success" href="@Url.Action("Register")"><i class="fa fa-sign-in"></i> @L("Register")</a>
                            </div>
                        </div>
                    </fieldset>
                </form>

                @{
                    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
                }

                @if (loginProviders.Count > 0)
                {
                    <p>@L("OrLoginWith"):</p>
                    

                    using (Html.BeginForm("ExternalLogin", "Account", method: FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                        <input type="hidden" name="provider" value="" />

                        foreach (var provider in loginProviders)
                        {
                            <a class="btn btn-default btn-sm social-login-link" title="@provider.AuthenticationType"
                               data-provider="@provider.AuthenticationType"
                               href="javascript:;">
                                <i class="fa fa-@(provider.AuthenticationType.ToLower())"></i> @provider.AuthenticationType
                            </a>
                        }
                    }
                }

            </div>
        </div>
    </div>
</div>*@

@using System.Web.Optimization
@{
    SetAntiForgeryCookie();
}

<!--Basic Styles-->
@Styles.Render("~/css/bootstrap")
<link id="bootstrap-rtl-link" href="" rel="stylesheet" />

<!--Fonts-->
<link href="http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,600,700,300"
      rel="stylesheet" type="text/css">

<!--Beyond styles-->
@Styles.Render("~/css/beyond")
<link id="skin-link" href="" rel="stylesheet" type="text/css" />

<!--Skin Script: Place this script in head to load scripts for skins and rtl support-->
@Scripts.Render("~/bundles/skin")

<div class="login-container animated fadeIn">
    <div class="loginbox bg-white">
        <div class="text-align-center">
            <img src="/assets/img/logo-tq.png" alt="">
        </div>
        <div class="loginbox-title">Ingreso a App Evaluaciones</div>
        <form id="LoginForm" class="form-horizontal" action="@(Url.Action("Login", "Account"))" method="POST">
            <div class="loginbox-textbox">
                <input class="form-control" id="EmailAddressInput" placeholder="Usuario" type="text" required>
            </div>
            <div class="loginbox-textbox">
                <input class="form-control" id="PasswordInput" placeholder="Contraseña" type="password" required>
            </div>
            <div class="loginbox-forgot">
                <a href="">Tienes problemas con el inicio de sesión?</a>
            </div>
            <div class="loginbox-submit">
                <button id="LoginButton" class="btn btn-block btn-primary" type="submit">Ingresar</button>
            </div>
        </form>
    </div>
</div>

<!--Basic Scripts-->
@Scripts.Render("~/bundles/slimscroll")

<!--Beyond Scripts-->
@Scripts.Render("~/bundles/beyond")